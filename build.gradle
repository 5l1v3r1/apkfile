buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.3'
        classpath 'net.sf.proguard:proguard-gradle:6.2.0'
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
    }
}

plugins {
    id "net.ltgt.apt" version "0.21"
}

apply plugin: 'java'
apply plugin: 'idea'

version = '2.1.0'
group = 'org.cf'
sourceCompatibility = 1.8
def jarVersion = version


jar {
    version = jarVersion
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.fork = true
}

// Ugly work-around until vscode plays better with auto generated sources
// https://github.com/redhat-developer/vscode-java/issues/339
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated/sources/annotationProcessor/java/main/']
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.repository.redhat.com/ga/' }
}

// Build a separate jar that contains all dependencies
task fatJar(type: Jar) {
    from sourceSets.main.output
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes('Main-Class': 'org.cf.apkfile.Main')
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    doLast {
        if (!System.getProperty('os.name').toLowerCase().contains('windows')) {
            ant.symlink(link: file("${destinationDir}/apkfile.jar"), resource: archivePath, overwrite: true)
        }
    }
}
tasks.getByPath('build').dependsOn(fatJar)

apply plugin: 'findbugs'
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

findbugs {
    ignoreFailures = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.29'
    compile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'
    compile group: 'org.smali', name: 'dexlib2', version: '2.3.4'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
    compile group: 'xmlpull', name: 'xmlpull', version: '1.1.4.redhat-1'
    compile group: 'org.bouncycastle', name: 'bcmail-jdk15on', version: '1.64'
    compile group: 'net.lingala.zip4j', name: 'zip4j', version: '2.2.4'
    compileOnly group: 'com.google.auto.value', name: 'auto-value-annotations', version: '1.7'
    annotationProcessor group: 'com.google.auto.value', name: 'auto-value', version: '1.7'
}

task proguard(type: proguard.gradle.ProGuardTask, dependsOn: fatJar) {
    configuration 'proguard.txt'

    def outFile = fatJar.destinationDir.getPath() + '/' + fatJar.baseName + '-' + fatJar.version + '-proguard' + '.' + fatJar.extension
    injars fatJar.archivePath
    outjars outFile
    libraryjars "${System.properties['java.home']}/lib/rt.jar"
}
